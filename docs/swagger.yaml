openapi: 3.0.2
info:
    title: Barbershop-API
    version: 1.0.0
    description: '### This is a Swagger UI for our games API'
paths:
    '/barbers/{id}':
        get:
            tags:
                - barbers
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Barber id
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/barber'
                            examples:
                                Full details of a given barber:
                                    value:
                                        id: 3
                                        name: JuuksurRisto3
                                        contact_details: JuuksurRisto3@gmail.com
                    description: |
                        Returns full details of a given id barber
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Barber /w+ was not found:
                                    value: "\t{\"error\":\"Barber not found\"}"
                    description: Barber was not in barbers array
            operationId: Barber id
            summary: Get full details of barber
            description: |
                Returns full details of a given id barber
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/barber'
                        examples:
                            example:
                                value:
                                    name: barbar
                                    contact_details: barbar@gmail.com
                                    id: 1
                required: true
            tags:
                - barbers
            parameters:
                -
                    examples:
                        small:
                            value: '8'
                    name: id
                    description: Identificator for the barber
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                example:
                                    value:
                                        id: 3
                                        name: JuuksurRisto3
                                        contact_details: JuuksurRisto3@gmail.com
                    description: |
                        Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Barber not found
                    description: |
                        Barber not found
            summary: Add full details of a barbers
            description: Adds full detail of a given barber id.
        delete:
            tags:
                - barbers
            parameters:
                -
                    examples:
                        example:
                            value: '1'
                    name: id
                    description: |
                        Identificator for the barber
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                error:
                                    value: "\t{\"error\":\"Barber not found\"}"
                    description: Barber was not deleted
            summary: Delete full details of barber
            description: |
                Deletes full details of a given id barber
    /barbers:
        get:
            tags:
                - barbers
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/barber'
                            examples:
                                List of barbers:
                                    value:
                                        -
                                            name: risto
                                            contact_details: risto@gmail.com
                                            id: 1
                                        -
                                            name: B
                                            contact_details: b@gmail.com
                                            id: 2
                    description: |
                        Returns a list of barbers
            summary: Get a list of all barbers
            description: Returns a list of all barbers in API
        post:
            requestBody:
                description: A new barber to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/barber'
                        examples:
                            example:
                                value:
                                    name: barbar
                                    contact_details: barbar@gmail.com
                required: true
            tags:
                - barbers
            responses:
                '201':
                    description: New barber has been created
                '400':
                    description: One or all params are missing
            deprecated: false
            summary: creates a barber
            description: |
                Post a new barber
    /services:
        get:
            tags:
                - services
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/service'
                            examples:
                                service:
                                    value:
                                        -
                                            service_name: some text
                                            description: some text
                                            id: 86
                                        -
                                            service_name: some text
                                            description: some text
                                            id: 25
                    description: Returns a list of all services in API
            summary: Get a list of all Services
            description: Returns a list of all services in API
        post:
            requestBody:
                description: A new service to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/service'
                        examples:
                            service:
                                value:
                                    service_name: juuste varvimine
                                    price: 74
                                    description: juuste varvimine
                required: true
            tags:
                - services
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Created:
                                    value: '[ "Men cut" "Women cut" "Hair coloring" ]'
                    description: New service has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Service not found
                    description: One or all params are missing
            summary: creates a service
            description: |
                Post a new barber
    '/services/{id}':
        get:
            tags:
                - services
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Service id
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/service'
                            examples:
                                Full details of given services:
                                    value:
                                        service_name: some text
                                        description: some text
                                        id: 63
                    description: |
                        Returns full details of a given id service
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Error message.
                    description: Service was not found in service array
            operationId: Service id
            summary: Get full details of service
            description: |
                Returns full details of a given id service
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/service'
                        examples:
                            new service:
                                value:
                                    service_name: Meesteloikus
                                    price: 18
                                    description: kaaridega
                                    id: 1
                required: true
            tags:
                - services
            parameters:
                -
                    examples:
                        small:
                            value: '1'
                    name: id
                    description: Identificator for the service
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Service:
                                    value:
                                        id: 1
                                        Service_name: Meestelõikus
                                        price: '5'
                                        Description: Masinlõikus
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: service not found
                    description: Service not found
            summary: Add full details of a services
        delete:
            tags:
                - services
            parameters:
                -
                    examples:
                        small:
                            value: '1'
                    name: id
                    description: Identificator for the service
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: service not found
                    description: Service not found
            summary: Deletes service
            description: Deletes service with given id
        parameters:
            -
                name: id
                in: path
                required: true
    /customer:
        get:
            tags:
                - customers
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/customer'
                            examples:
                                example:
                                    value:
                                        -
                                            name: maire
                                            contact_details: gmail@sm.com
                                            id: 1
                                        -
                                            name: voldemar
                                            contact_details: voldemar@sm.com
                                            id: 2
                    description: Returns a list of customers
            summary: Get a list of all customers
            description: Returns a list of all barbers in API
        post:
            requestBody:
                description: A new customer to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/customer'
                        examples:
                            example:
                                value:
                                    name: Joosep
                                    contact_details: joosep@gmail.com
                required: true
            tags:
                - customers
            responses:
                '201':
                    description: New customer has been created
                '400':
                    description: One or all params are missing
            summary: creates a customer
            description: post new customer
    '/customer/{id}':
        get:
            tags:
                - customers
            parameters:
                -
                    examples:
                        small:
                            value: '7'
                    name: id
                    description: |
                        Customer id
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/customer'
                            examples:
                                example:
                                    value:
                                        name: some text
                                        contact_details: some text
                                        id: 10
                    description: Returns full details of a given id barber
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                not found:
                                    value:
                                        error: Customer not found
                    description: Customer was not in customers array
            description: Returns full details of a given id customer
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/customer'
                        examples:
                            example:
                                value:
                                    name: joosep
                                    contact_details: joosep@email.com
                                    id: 1
                required: true
            tags:
                - customers
            parameters:
                -
                    examples:
                        small:
                            value: '1'
                    name: id
                    description: Identificator for the customer
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                Example:
                                    value:
                                        - Maire
                                        - Kalle
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Customer not found
                    description: |
                        Customer not found
            summary: Add full details of a customers
            description: Edits detail of a given customer id.
        delete:
            tags:
                - customers
            parameters:
                -
                    examples:
                        small:
                            value: '1'
                    name: id
                    description: Delete full details of customer
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: "\r\nSucceeded"
                '404':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                error:
                                    value:
                                        error: Customer not found
                    description: Customer was not deleted
            summary: Delete full details of customer
            description: Deletes full details of a given id customer
        parameters:
            -
                name: id
                in: path
                required: true
    /appointments:
        get:
            tags:
                - appointments
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/appointment'
                            examples:
                                example:
                                    value:
                                        -
                                            id: 1
                                            customerId: 1
                                            barberId: 1
                                            serviceId: 1
                                            datetime: 12/02/2002
                                        -
                                            id: 2
                                            customerId: 2
                                            barberId: 1
                                            serviceId: 1
                                            datetime: 13/02/2002
                    description: Retutns a list of appointments
            summary: Get a list of all appointment
            description: Returns a list of all appointments in API
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/appointment'
                        examples:
                            example:
                                value:
                                    customerId: 1
                                    barberId: 1
                                    serviceId: 1
                                    datetime: 31/01/1970
                required: true
            tags:
                - appointments
            responses:
                '201':
                    description: Appointment has been created
                '400':
                    description: one or more parameters missing
    '/appointments/{id}':
        get:
            tags:
                - appointments
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/appointment'
                            examples:
                                example:
                                    value:
                                        id: 1
                                        customerId: 1
                                        barberId: 1
                                        serviceId: 1
                                        datetime: 12/02/2002
                    description: Found appointment
                '404':
                    description: appointment not found
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/appointment'
                        examples:
                            example:
                                value:
                                    id: 1
                                    customerId: 1
                                    barberId: 1
                                    serviceId: 1
                                    datetime: 17/09/2020
                required: true
            tags:
                - appointments
            responses:
                '204':
                    description: appointment updated
                '404':
                    description: appointment not found
        delete:
            tags:
                - appointments
            responses:
                '204':
                    description: appointment deleted
                '404':
                    description: appointment not found
        parameters:
            -
                examples:
                    example:
                        value: '1'
                name: id
                schema:
                    type: integer
                in: path
                required: true
    /barberservices/:
        get:
            tags:
                - barberservices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/barberservice'
                            examples:
                                example:
                                    value:
                                        -
                                            serviceId: 1
                                            id: 1
                                            barberId: 2
                                            price: 73
                                        -
                                            serviceId: 2
                                            id: 2
                                            barberId: 2
                                            price: 29
                    description: Retutns a list of appointments
            summary: Get a list of all appointment
            description: Returns a list of all appointments in API
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/barberservice'
                        examples:
                            example:
                                value:
                                    serviceId: 1
                                    barberId: 1
                                    price: 10
                required: true
            tags:
                - barberservices
            responses:
                '201':
                    description: BarberService has been created
                '400':
                    description: one or more parameters missing
    '/barberservices/{id}/':
        get:
            tags:
                - barberservices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/barberservice'
                            examples:
                                example:
                                    value:
                                        serviceId: 1
                                        id: 1
                                        barberId: 1
                                        price: 10
                    description: Found barberservice
                '404':
                    description: barberservice not found
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/barberservice'
                        examples:
                            example:
                                value:
                                    serviceId: 1
                                    id: 1
                                    barberId: 1
                                    price: 10
                required: true
            tags:
                - barberservices
            responses:
                '204':
                    description: barberservice updated
                '404':
                    description: appointment not found
        delete:
            tags:
                - barberservices
            responses:
                '204':
                    description: barberservice deleted
                '404':
                    description: barberservice not found
        parameters:
            -
                examples:
                    example:
                        value: '1'
                name: id
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        service:
            description: ''
            required: []
            type: object
            properties:
                service_name:
                    description: ''
                    type: string
                description:
                    description: ''
                    type: string
                id:
                    description: ''
                    type: integer
        barber:
            description: ''
            required: []
            type: object
            properties:
                name:
                    description: ''
                    type: string
                contact_details:
                    description: ''
                    type: string
                id:
                    description: ''
                    type: integer
        appointment:
            description: ''
            type: object
            properties:
                id:
                    description: ''
                    type: integer
                customerId:
                    description: ''
                    type: integer
                barberId:
                    description: ''
                    type: integer
                serviceId:
                    description: ''
                    type: integer
                datetime:
                    description: ''
                    type: string
        customer:
            description: ''
            required: []
            type: object
            properties:
                name:
                    description: ''
                    type: string
                contact_details:
                    description: ''
                    type: string
                id:
                    description: ''
                    type: integer
        barberservice:
            description: ''
            type: object
            properties:
                serviceId:
                    description: ''
                    type: integer
                id:
                    description: ''
                    type: integer
                barberId:
                    description: ''
                    type: integer
                price:
                    description: ''
                    type: integer
