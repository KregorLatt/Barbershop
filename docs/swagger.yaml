openapi: 3.0.2
info:
    title: Barbershop-API
    version: 1.0.0
    description: '### This is a Swagger UI for our games API'
paths:
    '/barbers/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Barber id
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given barber:
                                    value:
                                        id: 3
                                        name: JuuksurRisto3
                                        contact_Details: JuuksurRisto3@gmail.com
                    description: |
                        Returns full details of a given id barber
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Barber /w+ was not found:
                                    value: "\t{\"error\":\"Barber not found\"}"
                    description: Barber was not in barbers array
            operationId: Barber id
            summary: Get full details of barber
            description: |
                Returns full details of a given id barber
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Update barber:
                                value:
                                    name: JuuksurRisto5
                                    Contact_Details: JuuksurRisto5@gmail.com
                required: true
            tags:
                - barbers
            parameters:
                -
                    examples:
                        small:
                            value: '8'
                    name: id
                    description: Identificator for the barber
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                example:
                                    value:
                                        id: 3
                                        name: JuuksurRisto3
                                        contact_Details: JuuksurRisto3@gmail.com
                    description: |
                        Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Barber not found
                    description: |
                        Barber not found
            summary: Add full details of a barbers
            description: Adds full detail of a given barber id.
        delete:
            tags:
                - Delete
            parameters:
                -
                    examples:
                        small:
                            value: '7'
                    name: id
                    description: |
                        Identificator for the barber
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                error:
                                    value: "\t{\"error\":\"Barber not found\"}"
                    description: Barber was not deleted
            summary: Delete full details of barber
            description: |
                Deletes full details of a given id barber
    /barbers:
        get:
            tags:
                - barbers
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                List of barbers:
                                    value:
                                        id: 1
                                        name: JuuksurRisto
                                        contact_Details: JuuksurRisto@gmail.com
                    description: |
                        Returns a list of barbers
            summary: Get a list of all barbers
            description: Returns a list of all barbers in API
        post:
            requestBody:
                description: A new barber to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-barber'
                        examples:
                            example:
                                value:
                                    id: '1'
                                    name: JuuksurRisto2
                                    contact_Details: JuuksurRisto2@gmail.com
                required: true
            tags:
                - barbers
            responses:
                '201':
                    description: New barber has been created
                '400':
                    description: One or all params are missing
            deprecated: false
            summary: creates a barber
            description: |
                Post a new barber
    /services:
        get:
            tags:
                - services
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                service:
                                    value: "\t{\"id\":1,\"service_name\":\"Meestelõikus\",\"price\":\"5\",\"description\":\"Masinlõikus\"}"
                    description: Returns a list of all services in API
            summary: Get a list of all Services
            description: Returns a list of all services in API
        post:
            requestBody:
                description: A new service to be created
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            service:
                                value:
                                    service_name: Meestelõikus
                                    price: '5'
                                    description: Masinlõikus
                required: true
            tags:
                - services
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Created service:
                                    value: "\t{\"id\":1,\"service_name\":\"Meestelõikus\",\"price\":\"5\",\"description\":\"Masinlõikus\"}"
                    description: New service has been created
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Created:
                                    value: '[ "Men cut" "Women cut" "Hair coloring" ]'
                    description: New service has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Service not found
                    description: One or all params are missing
            summary: creates a service
            description: |
                Post a new barber
    '/services/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Service id
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of given services:
                                    value:
                                        id: 1
                                        service_name: Meestelõikus
                                        price: '5'
                                        description: Masinlõikus
                    description: |
                        Returns full details of a given id service
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Error message.
                    description: Service was not found in service array
            operationId: Service id
            summary: Get full details of service
            description: |
                Returns full details of a given id service
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            new service:
                                value:
                                    id: 1
                                    Service_name: Meestelõikus
                                    price: '5'
                                    Description: Masinlõikus
                required: true
            tags:
                - services
            parameters:
                -
                    examples:
                        small:
                            value: '5'
                    name: id
                    description: Identificator for the service
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Accepted:
                                    value: "\t{\"id\":1,\"service_name\":\"Meestelõikus\",\"price\":\"5\",\"description\":\"Masinlõikus\"}"
                    description: Accepted
                '204':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Service:
                                    value:
                                        id: 1
                                        Service_name: Meestelõikus
                                        price: '5'
                                        Description: Masinlõikus
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: service not found
                    description: Service not found
            summary: Add full details of a services
        delete:
            tags:
                - services
            parameters:
                -
                    examples:
                        small:
                            value: '5'
                    name: id
                    description: Identificator for the service
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: service not found
                    description: Service not found
            summary: Deletes service
            description: Deletes service with given id
        parameters:
            -
                name: id
                in: path
                required: true
    /customer:
        get:
            tags:
                - Customers
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                List of customers:
                                    value:
                                        - Maire
                                        - Kalle
                    description: Returns a list of customers
            summary: Get a list of all customers
            description: Returns a list of all barbers in API
        post:
            requestBody:
                description: A new customer to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-customer'
                        examples:
                            new-customer:
                                value:
                                    name: some text
                                    contact_details: 30.08
                required: true
            tags:
                - customers
            responses:
                '201':
                    description: New customer has been created
                '400':
                    description: One or all params are missing
            summary: creates a customer
            description: post new customer
    '/customer/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    examples:
                        small:
                            value: '7'
                    name: id
                    description: |
                        Customer id
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    description: Returns full details of a given id barber
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                not found:
                                    value:
                                        error: Customer not found
                    description: Customer was not in customers array
            description: Returns full details of a given id customer
        put:
            tags:
                - Customers
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Identificator for the customer
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                Example:
                                    value:
                                        - Maire
                                        - Kalle
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Customer not found
                    description: |
                        Customer not found
            summary: Add full details of a customers
            description: Adds full detail of a given customer id.
        delete:
            tags:
                - Delete
            parameters:
                -
                    examples:
                        small:
                            value: '7'
                    name: id
                    description: Delete full details of customer
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: "\r\nSucceeded"
                '404':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                error:
                                    value:
                                        error: Customer not found
                    description: Customer was not deleted
            summary: Delete full details of customer
            description: Deletes full details of a given id customer
        parameters:
            -
                name: id
                in: path
                required: true
    /appointment:
        get:
            tags:
                - appointments
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items: {}
                    description: Retutns a list of appointments
            summary: Get a list of all appointment
            description: Returns a list of all appointments in API
    '/appointment/{id}': {}
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        delete-barber:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
        new-barber:
            description: ''
            type: object
            properties:
                contact_details:
                    format: float
                    description: ''
                    type: number
                name:
                    description: ''
                    type: string
        new-service:
            description: ''
            required:
                - Service_name
                - Price
                - Description
            type: object
            properties:
                Service_name:
                    description: ''
                    type: string
                Price:
                    format: float
                    description: ''
                    type: number
                Description:
                    description: ''
                    type: string
        new-customer:
            description: ''
            type: object
            properties:
                name:
                    description: ''
                    type: string
                contact_details:
                    format: float
                    description: ''
                    type: number
